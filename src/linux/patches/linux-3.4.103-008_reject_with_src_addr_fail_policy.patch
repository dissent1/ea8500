diff -Nur linux.orig/include/linux/icmpv6.h linux.new/include/linux/icmpv6.h
--- linux.orig/include/linux/icmpv6.h	2012-11-30 13:28:01.329015966 -0800
+++ linux.new/include/linux/icmpv6.h	2012-11-30 13:30:00.829260410 -0800
@@ -1,6 +1,8 @@
 #ifndef _LINUX_ICMPV6_H
 #define _LINUX_ICMPV6_H
 
+/* modified by Cisco Systems, Inc. on 11/30/2012 Added handling for ICMPv6 message type 1 code 5 */
+
 #include <linux/types.h>
 #include <asm/byteorder.h>
 
@@ -123,6 +125,7 @@
 #define ICMPV6_ADDR_UNREACH		3
 #define ICMPV6_PORT_UNREACH		4
 #define ICMPV6_FAILED_POLICY		5
+#define ICMPV6_SRC_ADDR_FAIL_POLICY     5
 #define ICMPV6_REJECT_ROUTE		6
 
 /*
diff -Nur linux.orig/include/linux/netfilter_ipv6/ip6t_REJECT.h linux.new/include/linux/netfilter_ipv6/ip6t_REJECT.h
--- linux.orig/include/linux/netfilter_ipv6/ip6t_REJECT.h	2012-11-30 13:51:26.829010658 -0800
+++ linux.new/include/linux/netfilter_ipv6/ip6t_REJECT.h	2012-11-30 13:53:27.829010581 -0800
@@ -1,12 +1,15 @@
 #ifndef _IP6T_REJECT_H
 #define _IP6T_REJECT_H
 
+/* modified by Cisco Systems, Inc. on 11/30/2012 */
+
 enum ip6t_reject_with {
 	IP6T_ICMP6_NO_ROUTE,
 	IP6T_ICMP6_ADM_PROHIBITED,
 	IP6T_ICMP6_NOT_NEIGHBOUR,
 	IP6T_ICMP6_ADDR_UNREACH,
 	IP6T_ICMP6_PORT_UNREACH,
+        IP6T_ICMP6_SRC_ADDR_FAIL_POLICY,
 	IP6T_ICMP6_ECHOREPLY,
 	IP6T_TCP_RESET
 };
diff -Nur linux.orig/net/ipv6/netfilter/ip6t_REJECT.c linux.new/net/ipv6/netfilter/ip6t_REJECT.c
--- linux.orig/net/ipv6/netfilter/ip6t_REJECT.c	2012-11-30 13:58:44.829011594 -0800
+++ linux.new/net/ipv6/netfilter/ip6t_REJECT.c	2012-11-30 13:57:03.329260351 -0800
@@ -14,6 +14,8 @@
  * as published by the Free Software Foundation; either version
  * 2 of the License, or (at your option) any later version.
  */
+/* modified by Cisco Systems, Inc. on 11/30/2012 Added handling for ICMPv6 message type 1 code 5 */
+
 #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt
 
 #include <linux/gfp.h>
@@ -199,6 +201,9 @@
 	case IP6T_ICMP6_PORT_UNREACH:
 		send_unreach(net, skb, ICMPV6_PORT_UNREACH, par->hooknum);
 		break;
+	case IP6T_ICMP6_SRC_ADDR_FAIL_POLICY:
+		send_unreach(net, skb, ICMPV6_SRC_ADDR_FAIL_POLICY, par->hooknum);
+
 	case IP6T_ICMP6_ECHOREPLY:
 		/* Do nothing */
 		break;
