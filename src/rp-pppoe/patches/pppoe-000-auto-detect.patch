diff -Nur old/src/discovery.c new/src/discovery.c
--- old/src/discovery.c	2011-05-23 15:13:32.000000000 -0700
+++ new/src/discovery.c	2011-05-23 15:15:07.000000000 -0700
@@ -45,6 +45,7 @@
 
 /* Supplied by pppd if we're a plugin */
 extern int persist;
+extern int optAutoDetect;
 
 /**********************************************************************
 *%FUNCTION: parseForHostUniq
@@ -671,6 +672,10 @@
 	    } else {
 		rp_fatal("Timeout waiting for PADO packets");
 	    }
+	    if(optAutoDetect) {
+		system("sysevent set pppoe_detect NOK");
+		exit(0);
+	    }
 	}
 	sendPADI(conn);
 	conn->discoveryState = STATE_SENT_PADI;
@@ -703,6 +708,10 @@
 	    } else {
 		rp_fatal("Timeout waiting for PADS packets");
 	    }
+	    if(optAutoDetect) {
+		system("sysevent set pppoe_detect NOK");
+	        exit(0);
+	    }
 	}
 	sendPADR(conn);
 	conn->discoveryState = STATE_SENT_PADR;
@@ -712,5 +721,12 @@
 
     /* We're done. */
     conn->discoveryState = STATE_SESSION;
+    /* this option is just for pppoe auto detecion only. */
+    if(optAutoDetect) {
+	system("sysevent set pppoe_detect OK");
+	sendPADT(conn, "RP-PPPoE: Session killed manually");
+	close(conn->discoverySocket);
+	exit(0);
+    }
     return;
 }
diff -Nur old/src/pppoe.c new/src/pppoe.c
--- old/src/pppoe.c	2011-05-23 15:19:13.000000000 -0700
+++ new/src/pppoe.c	2011-05-23 15:18:39.000000000 -0700
@@ -66,6 +66,7 @@
 int optFloodDiscovery    = 0;   /* Flood server with discovery requests.
 				   USED FOR STRESS-TESTING ONLY.  DO NOT
 				   USE THE -F OPTION AGAINST A REAL ISP */
+int optAutoDetect        = 0;   /* pppoe auto detection  */
 
 PPPoEConnection *Connection = NULL; /* Must be global -- used
 				       in signal handler */
@@ -379,6 +380,7 @@
 	    "   -k             -- Kill a session with PADT (requires -e)\n"
 	    "   -d             -- Perform discovery, print session info and exit.\n"
 	    "   -f disc:sess   -- Set Ethernet frame types (hex).\n"
+	    "   -a             -- pppoe auto detection.\n"
 	    "   -h             -- Print usage information.\n\n"
 	    "PPPoE Version %s, Copyright (C) 2001-2006 Roaring Penguin Software Inc.\n"
 	    "PPPoE comes with ABSOLUTELY NO WARRANTY.\n"
@@ -433,9 +435,9 @@
     openlog("pppoe", LOG_PID, LOG_DAEMON);
 
 #ifdef DEBUGGING_ENABLED
-    options = "I:VAT:D:hS:C:Usm:np:e:kdf:F:t:";
+    options = "I:VAaT:D:hS:C:Usm:np:e:kdf:F:t:";
 #else
-    options = "I:VAT:hS:C:Usm:np:e:kdf:F:t:";
+    options = "I:VAaT:hS:C:Usm:np:e:kdf:F:t:";
 #endif
     while((opt = getopt(argc, argv, options)) != -1) {
 	switch(opt) {
@@ -565,6 +567,9 @@
 	case 'A':
 	    conn.printACNames = 1;
 	    break;
+	case 'a':
+	    optAutoDetect = 1;
+	    break;
 	case 'h':
 	    usage(argv[0]);
 	    break;
@@ -628,7 +633,7 @@
     /* server equipment).                                                  */
     /* Opening this socket just before waitForPADS in the discovery()      */
     /* function would be more appropriate, but it would mess-up the code   */
-    if (!optSkipSession)
+    if (!optSkipSession && !optAutoDetect)
         conn.sessionSocket = openInterface(conn.ifName, Eth_PPPOE_Session, conn.myEth);
 
     /* Skip discovery and don't open discovery socket? */
